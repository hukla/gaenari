<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 다수의 xml 문서 자체를 구분하기 위한 xml 문서 별칭 -->
<mapper namespace="u">

	<!-- 14-05-20 성훈수정: 로그인 아이디만 보내도록 수정 -->
	<select id="getOneLoginUser" parameterType="String" resultType="UserDTO" >
		select * from userinfo where userid = #{userid}
	</select>
	
	<!-- 2014-05-24 재희 수정: userno를 가지고 user 불러오기 -->
	<select id="selectOne" parameterType="int" resultType="UserDTO">
		SELECT * FROM userinfo WHERE userno = #{userno}
	</select>
	
	<!-- 2014-05-28 성훈추가: 페이스북으로 받은 email로 user 불러오기 -->
	<select id="getEmailCheck" parameterType="string" resultType="UserDTO">
		SELECT * FROM userinfo WHERE email = #{email}
	</select>
	
	<!-- 2014-05-28 재희 추가: point 더하기 -->
	<update id="updatePoint" parameterType="model.dto.DonReqDTO">
		UPDATE userinfo SET point = point + #{price}*0.05 WHERE userno=#{userno}
	</update>
	
	<!-- 2014-05-29 성훈추가: 이름으로 user정보얻어 dogDTO로 담아보내기 -->
	<select id="getUserByname" parameterType="String" resultType="DogDTO" >
		SELECT userid,username,email,address,0 AS dogage FROM userinfo WHERE username LIKE '%'||#{username}||'%' EXCEPT
		SELECT userid,username,email,address,0 AS dogage FROM userinfo u JOIN dog d ON u.userno = d.userno AND username LIKE '%'||#{username}||'%' GROUP BY u.userno
		UNION SELECT userid,username,email,address,COUNT(dogname) AS dogage FROM userinfo u JOIN dog d ON u.userno = d.userno AND username LIKE '%'||#{username}||'%' GROUP BY u.userno
	</select>
	
	<!-- 2014-05-29 성훈추가: 주소로 user정보얻어 dogDTO로 담아보내기 -->
	<select id="getUserByAddr" parameterType="String" resultType="DogDTO" >
		SELECT userid,username,email,address,0 AS dogage FROM userinfo WHERE address LIKE '%'||#{address}||'%' EXCEPT
		SELECT userid,username,email,address,0 AS dogage FROM userinfo u JOIN dog d ON u.userno = d.userno AND address LIKE '%'||#{address}||'%' GROUP BY u.userno
		UNION SELECT userid,username,email,address,COUNT(dogname) AS dogage FROM userinfo u JOIN dog d ON u.userno = d.userno AND address LIKE '%'||#{address}||'%' GROUP BY u.userno
	</select>
	
	<!-- 2014-05-29 성훈추가: ID로 user정보얻어 dogDTO로 담아보내기 -->
	<select id="getUserById" parameterType="String" resultType="DogDTO" >
		SELECT u.username,u.userid,u.email,u.address,(select count(dogname) FROM
		userinfo u JOIN dog d ON u.userno = d.userno AND userid=#{userid}) AS dogage FROM userinfo u JOIN dog d
		ON u.userno = d.userno AND u.userid=#{userid} GROUP BY userid
	</select>
	
	<!-- 2014-06-06 수진추가: 테스트 결과 넣기 -->
	<insert id="insertQuest" parameterType="QuestionaireDTO">
		INSERT INTO questionaire VALUES(null,#{userno},#{q1},#{q2},#{q3},#{q4},#{q5}) 
	</insert>
	
	<!-- 2014-06-06 수진추가: 사용자의 테스트여부 확인 & 사용자의 테스트 결과값 가져오기 -->
	<select id="checkQuest" parameterType="int" resultType="QuestionaireDTO">
		SELECT * from questionaire where userno=#{int}
	</select>
	
	<!-- 2014-06-07 수진추가: 테스트 선택 -->
	<update id="updateQuest" parameterType="QuestionaireDTO">
		UPDATE questionaire set q1=#{q1},q2=#{q2},q3=#{q3},q4=#{q4},q5=#{q5} where userno=#{userno};
	</update>
	
	<select id="getAll" resultType="UserDTO">
		select * from userinfo where usertype=0;
	</select>
	
</mapper>					